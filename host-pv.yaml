# PV (PersistentVolume):
# - Defined by the admin or via a StorageClass.
# - Represents actual physical storage in the cluster.
# - Contains details like size, access mode, and storage type.
# - Not directly attached to any Pod.
# - Waits to be bound by a matching PVC.
apiVersion: v1
kind: PersistentVolume
metadata: 
  name: host-pv 
# Our specification for this persistent volume  
spec: 
  # An administrator we control how much capacity can be used by the different pods which are later executed in our cluster
  # and therfore we can set a capacity for this persistent volume and the pods when they claim this volume later can then
  # define how much capacity they need. So here we specify the overall available capacity
  capacity: 
    # We specify the storage capacity to 1 gigabytes. So we defining that up to 1 gigabytes of space can be claimed and used
    # here for this hostPath volume
    storage: 1Gi
  # volumeMode - There are 2 available modes - filesystem storage and block storage and these are different storage types and 
  # they are not only defined by Kubernetes but generally. for more details check
  #  on: https://www.computerweekly.com/feature/Storage-pros-and-cons-Block-vs-file-vs-object-storage
  # Here we using filesystem storage, because we have a folder on the file system inside of our virtual machine
  volumeMode: Filesystem
  # We set here how our volume can access.
  # We specify what will be allow when we claim this persisten volume and we can specify all modes, because it's only
  # when we claim a volume that we then have to define how we want to claim this volume for a given pod. Here we just
  # define what should generally be allowed, so how this may be claimed.
  accessModes:
    # Sidenote - we used 'ReadWriteOnce' since the 'ReadOnlyMany' and 'ReadWriteMany' are not option, since we're using 
    # the hostPast type (becasue we're on one single node since we're on develop mode). So they will not in available option
    # because hostPath by definition is defined on one node, and therefore another node and another pode running on another
    # node won't be able to claim it
    # ReadWriteOnce - Means that this volume can be mounted as a read-write volume by a single (worker) node. So by multiple
    # pods, by they all have to be on the same node
    - ReadWriteOnce
    # ReadOnlyMany - Means that it's read-only, but it can be claimed by multiple nodes. So multiple pods on different nodes
    # can claim the same persisten volume 
    # - ReadOnlyMany  
    # ReadWriteMany - It's like 'ReanOnlyMany', just with write access
    # - ReadWriteMany  
# Sidenote about the host path type/driver in this persisten volume - It will only work on a single node testing environment,
# but this is the environment we have right now, since we are in delvelopment mode, so we on one worker node, but of course 
# when we will be on production, we'll not use the hostPath type/driver, because our pods will be maby on different worker
# node/machine.  
  # So we set up a hostPath persistent volume as a standalone volume detached from any pod in this environment  
  hostPath: 
    path: /data 
    type: DirectoryOrCreate 


