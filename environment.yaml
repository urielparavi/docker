# Sidenote - for use this file we need to apply this file, so: kubectl apply -f=environment.yaml
# If we don't want to set our environment variables on the deployment.yaml, so add them to container specification and 
# instead we wanna have key value pairs in a separate file or separate resource, and therefore entity in our cluster,
# and mabe also such different containers specs from different pods can utilize the same environment variables. 
# So this is a common use case and something we can easily implemeting with Kubernetes with a file like here
# (environment.yaml - the name up to us)
apiVersion: v1
# ConfigMap - This is another resource, another object Kubernetes understands, and as the name suggests, it create a map
# of configurations, so a key value pair list basically
kind: ConfigMap
metadata:
  # The name of our object ConfigMap
  name: data-store-env
data:
  # Here we defined multiple of key value pairs, but in our case we have just one.
  #  So in our case we set up for example key folder and 'story' that we specified in our mountPath for the value
  folder: 'story'
  # key: value..